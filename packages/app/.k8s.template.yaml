---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: app
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  labels:
    app.kubernetes.io/name: app
    app.kubernetes.io/version: ${RELEASE}
    app.kubernetes.io/component: http
    app.kubernetes.io/part-of: ashesdb
    app.kubernetes.io/managed-by: github-actions
spec:
  tls:
    - hosts:
        - ashesdb.com
        - www.ashesdb.com
      secretName: tls-ashesdb-com
  rules:
    - host: ashesdb.com
      http:
        paths:
          - backend:
              serviceName: app
              servicePort: 80


---
apiVersion: v1
kind: Service
metadata:
  name: app
  labels:
    app.kubernetes.io/name: app
    app.kubernetes.io/version: ${RELEASE}
    app.kubernetes.io/component: http
    app.kubernetes.io/part-of: ashesdb
    app.kubernetes.io/managed-by: github-actions
spec:
  selector:
    app.kubernetes.io/name: app
  ports:
    - name: http
      port: 80
      targetPort: http


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app
  labels:
    app.kubernetes.io/name: app
    app.kubernetes.io/version: ${RELEASE}
    app.kubernetes.io/component: http
    app.kubernetes.io/part-of: ashesdb
    app.kubernetes.io/managed-by: github-actions
data:
  NODE_ENV: production


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    app.kubernetes.io/name: app
    app.kubernetes.io/version: ${RELEASE}
    app.kubernetes.io/component: http
    app.kubernetes.io/part-of: ashesdb
    app.kubernetes.io/managed-by: github-actions
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app
        app.kubernetes.io/version: ${RELEASE}
        app.kubernetes.io/component: http
        app.kubernetes.io/part-of: ashesdb
        app.kubernetes.io/managed-by: github-actions
    spec:
      imagePullSecrets:
        - name: ghcr.io
      containers:
        - name: app
          image: ghcr.io/ashesdb/app:${RELEASE}
          ports:
            - name: http
              containerPort: 4700
              protocol: TCP
          envFrom:
            - configMapRef:
                name: app
