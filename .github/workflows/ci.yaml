name: CI

on:
  push:
    branches:
      - master

env:
  DOCKER_REPO: ghcr.io/ashesdb

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-dependencies-${{ hashFiles('yarn.lock') }}
      - uses: actions/setup-node@v2
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        with:
          node-version: 14
          cache: yarn
      - run: yarn
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

  terraform-validate:
    name: Validate terraform configuration
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - run: terraform init
      - run: terraform fmt
      - run: terraform validate

  changed:
    name: Get changed packages
    runs-on: ubuntu-latest
    needs:
      - install
    outputs:
      matrices: ${{ steps.matrices.outputs.matrices }}
      packages: ${{ steps.packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-dependencies-${{ hashFiles('yarn.lock') }}
      - name: Get changed packages
        id: packages
        run: echo "::set-output name=packages ::$((yarn lerna changed --loglevel silent || true) | paste -sd, -)"
      - name: Generate matrices of jobs for changed packages
        id: matrices
        run: echo "::set-output name=matrices ::$(./.github/scripts/changed-matrices ${{ steps.packages.outputs.packages }})"

  build:
    name: Build packages
    runs-on: ubuntu-latest
    needs:
      - install
      - changed
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-dependencies-${{ hashFiles('yarn.lock') }}
      - name: Version packages
        run: yarn lerna version --no-git-tag-version --no-push
      - name: Build changed packages
        env:
          CHANGED: ${{ needs.changed.outputs.packages }}
        run: test -z "$CHANGED" || yarn build --scope="{,$CHANGED}" --include-dependencies
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |-
            packages/*/dist
            packages/*/package.json

  docker-lint:
    name: Lint Dockerfiles
    runs-on: ubuntu-latest
    needs:
      - changed
    if: fromJSON(needs.changed.outputs.matrices).build-container[0] != null
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changed.outputs.matrices).build-container }}
    steps:
      - uses: actions/checkout@v2
      - name: Lint Dockerfiles
        uses: docker://hadolint/hadolint:latest-debian
        with:
          entrypoint: hadolint
          args: packages/${{ matrix.package }}/Dockerfile

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-dependencies-${{ hashFiles('yarn.lock') }}
      - name: Run tests with coverage
        run: yarn test --coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage/lcov-report

  build-containers:
    name: Build containers
    runs-on: ubuntu-latest
    needs:
      - build
      - changed
      - docker-lint
    if: fromJSON(needs.changed.outputs.matrices).build-container[0] != null
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changed.outputs.matrices).build-container }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: packages
      - name: Determine version
        id: version
        run: |
          VERSION="v$(jq -r .version packages/${{ matrix.package }}/package.json)"
          echo "::set-output name=version ::$VERSION"
      - name: Build image
        env:
          DOCKER_BUILDKIT: 1
        run: >-
          docker build
          -f packages/${{ matrix.package }}/Dockerfile
          -t $DOCKER_REPO/${{ matrix.package }}:${{ steps.version.outputs.version }}
          packages/${{ matrix.package }}
      - name: Log into GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: Push docker image to GHCR
        run: docker push $DOCKER_REPO/${{ matrix.package }}:${{ steps.version.outputs.version }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
      - build-containers
      - test
    if: |
      always() &&
      needs.build.result == 'success' &&
      (needs.build-containers.result == 'success' || needs.build-containers.result == 'skipped') &&
      needs.test.result == 'success'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-dependencies-${{ hashFiles('yarn.lock') }}
      - uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: packages
      - run: git reset --hard HEAD
      - run: git branch -a
      - run: tree -I 'coverage|node_modules' .
      - name: Configure CI git user
        run: |
          git config --global user.email "chiel@kunkels.me"
          git config --global user.name "Chiel Kunkels"
      - name: Set npm credentials
        run: |
          yq e -i '.npmScopes.ashesdb.npmAuthToken = "${{ secrets.GITHUB_TOKEN }}"' .yarnrc.yml
          git update-index --assume-unchanged .yarnrc.yml
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
          git update-index --assume-unchanged .npmrc
      - name: Version packages
        run: yarn lerna version
      - name: Publish packages
        run: yarn lerna publish from-package
